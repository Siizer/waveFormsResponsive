:root {
  /* Color Variables */
  --Aphase: hsl(0, 100%, 50%);
  --Bphase: hsl(43, 100%, 50%);
  --Cphase: hsl(240, 100%, 50%);
  --lineGuide: hsl(0, 10%, 86%);
  --negative: hsl(300, 100%, 50%);
  --positive: hsl(120, 100%, 50%);
  --zero: hsl(0, 0%, 50%);

  --colorText: #322c2d;
  --color-bg: #92978a;

  --borderFrames: steelblue;

  --thickness_abc: 5px;
  --color-background: #222;
  --color-text: #fff;
  --color-highlight: limegreen;  
  --legend-circle-size: 5px;
  --legend-font-size: 0.85rem;  
  --cellWidth :200px;
}


* {
  box-sizing: border-box;
  font-size: 14px;
  margin: 0;
  padding: 0;
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  color-scheme: dark mode;
}

:where(body) {
  background-color: var(--color-background);
  color: var(--color-text);
  font-family: sans-serif;
  margin: 0;
  padding: 0;
}

.column-1 {
  margin-left: 0.5rem;
  margin-block: 1rem;
}

.column-2 {
  margin-right: 0.5rem;
  margin-block: 1rem;
}

button{
  position: relative;
	background:none;
  outline: none;
  border: solid 1px var(--colorText);
  border-radius: 0.25em;
  font-size: 1rem;
	color: white;
  font-family: "Monorama";
  padding: 0.25em 0.75em;
  cursor: pointer;
  overflow: hidden;
  transition: all 0.3s ease;
  z-index: 100;
}

button span{
 padding-right: 0.5em;
}

button:after{
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0%;
  height: 100%;
  background:var(--colorText);
  z-index: -1;
  transition: all 0.3s ease;
}

button:hover {
	color: var(--color-bg);
}

button:hover:after{
  width: 100%;
}

:where(button) {
  background: none;
  border: none;
  font: inherit;
  cursor: pointer;
  padding: 0.5rem 1rem;
}

img {
  max-width: 100%;              /* [1] */ 
  height: auto;                 /* [1] */ 
  vertical-align: middle;       /* [2] */ 
  font-style: italic;           /* [3] */ 
  background-repeat: no-repeat; /* [4] */ 
  background-size: cover;       /* [4] */ 
  shape-margin: 0.75rem;        /* [5] */ 
}

:popover-open {
  width: 300px;
  height: 200px;
  position: absolute;
  top:0;
  left:0;

  margin: 0;
}

::-webkit-backdrop {
  background-color: rgba(0,0,0,0.5);
}

::backdrop {
  background-color: rgba(0,0,0,0.5);
}


#svg3 [popover] {
  border: 1px solid black;
  width: 120px;
  inset: unset;
}

#mainpopover {
  left: 7px;
  top: 38px;
}

#subpopover {
  left: 120px;
  top: 86px;
}

.listcontainer,
.subcontainer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

a {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  text-decoration: none;
  outline: none;
  text-align: center;
  line-height: 3;
  color: black;
}

a:link,
a:visited {
  /* background: palegoldenrod; */
  color: black;
}

a:hover,
a:focus {
  color: beige;
}

a:active {
  background: darkred;
  color: white;
}

form {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 2fr 3fr 1fr;
  grid-template-columns: 2fr 3fr 1fr;
  font-size: 1 cqi;
}

.form-container {
  width:180px;
  display: grid;
  border:none;
}

abbr[title] {
  text-decoration: none;
  text-align: end;
}

.form-container label {
  display: block; /* Ensure labels are above inputs */
}

.starterContent{
color:black;
}

label {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  gap: 5px;
}

input[type="range"], input[type="checkbox"] {
  width: 50%; 
}


#svg1,
#svg2,
#svg3 {
  position: relative;
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  flex:1;
  -webkit-box-pack:center;
      -ms-flex-pack:center;
          justify-content:center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  height: 33%;
  border: 1px solid var(--borderFrames);
}


:where(.legend-text) {
  font-family: sans-serif;
  font-size: var(--legend-font-size);
  fill: white; /* if it's <text> in an SVG */
}

.legend-group:has(circle[data-active="true"]) text {
  font-weight: bold;
  text-decoration: underline;
}

/* You might also scope classes more specifically: */
circle.my-legend-circle, circle.my-legend-circleRight {
  r: var(--legend-circle-size);
  stroke-width: 1;
  cursor: pointer;
}

#container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 100vh;
}

.column-1 {
  width: 66.66%;
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position:relative;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}

.column-1_centered {
  display: flex;
  flex-direction: row-reverse;
  width: 100%;
  justify-content: center;
  align-items: center;
}

.column-2 {
  width: 33.33%;
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.column-2_centered {
  display: none;
}

.row {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  /* background-color: #e0e0e0; */
  margin: 5px 0 5px 0;
  padding: 10px 0 10px 0;
  width: 100%;
  height: calc(33% - 10px - 5px);
  text-align: center;
}

.row-large {
  -webkit-box-flex: 2;
      -ms-flex: 2;
          flex: 2;
  /* margin: 5px 0 5px 0;
  padding: 10px 0 10px 0; */
  height: 66.66%;
  text-align: center;
  border:1px solid var(--borderFrames)
}

.youtube-button {
  display: inline-block;
  padding: 5px 10px;
  margin-top: 5px;
  font-size: 1rem;
  line-height: 1;
  color: #fff;
  background-color: #FF0000;
  border: none;
  border-radius: 5px;
  text-decoration: none;
  cursor: pointer;
  transition: background-color 0.3s;
}

.youtube-button:hover {
  background-color: #CC0000;
}

#viz_polar{
    position: relative;
    width: 100%;
  height:100%;
    min-height: 300px; 
}

.row-small {
  -webkit-box-flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  height: 33.33%;
  text-align: center;
  border:1px solid var(--borderFrames)
}

svg {
  overflow:visible;
}

.vertical-legend {
  font-size: 1rem;
  -webkit-writing-mode: tb-rl;
      -ms-writing-mode: tb-rl;
          writing-mode: tb-rl; /* For vertical text */
  fill: black;
}

.horizontal-legend {
  font-size: 1rem;
  fill: black;
}

.mylineIA,
.mylineVA {
  stroke: var(--Aphase);
}
.mylineIB,
.mylineVB {
  stroke: var(--Bphase);
}
.mylineIC,
.mylineVC {
  stroke: var(--Cphase);
}

.mylineI_O {
  fill:steelblue;
  stroke: steelblue;
}

#tempLineStart, #tempLineMove, #runningLine {
stroke: var(--lineGuide);
stroke-width: 1px;
}
#tempLine {
stroke: var(--lineGuide);
stroke-width: 2.5px;
}

.myLineIA-track, .myLineIB-track, .myLineIC-track,
.myLineVA-track, .myLineVB-track, .myLineVC-track,
.myLineVA-track-Right, .myLineVB-track-Right, .myLineVC-track-Right {
  transition: fill 0.2s ease, transform 0.2s ease;
}

.default-mode :is(.myLineVA-track-Right, .myLineVB-track-Right, .myLineVC-track-Right) {
  display:none;
}

.guideLine {
  stroke: var(--lineGuide);
  stroke-dasharray: 4,2;
  transition: stroke 0.3s ease;
}
.guideLineHorizontal {
  stroke-dasharray: 4,2;
  transition: stroke 0.3s ease;
}
.guideLineStart {
  stroke: green;
  stroke-width: 2.5px;
  transition: stroke 0.3s ease;
}
.guideLineMove {
  stroke: steelblue;
  stroke-width: 2.5px;
  transition: stroke 0.3s ease;
}

.circle {
  fill: none;
  stroke: rgba(255, 255, 225, 0);
  stroke-width: 1;
}
circle.vectora,
circle.vectorb,
circle.vectorc {
  fill: rgba(255, 255, 255, 0.1);
  stroke: #ffffff;
  stroke-width: 0.2;
}

.axis circle {
  fill: none;
  stroke: #ffffff;
  stroke-dasharray: 1, 4;
}
.axis :last-of-type circle {
  stroke: #ede6e6;
  stroke-dasharray: none;
}
.axis path,
.axis line {
  fill: none;
  stroke: rgb(255, 255, 255);
  shape-rendering: crispEdges;
}
.axis text {
  /* font-family: sans-serif; */
  font-size: 1rem;
  stroke: #ffffff;
}
.x.axis line {
  stroke: #fefcfc;
}
.x.axis .minor {
  stroke-opacity: 0.5;
}
.x.axis path {
  fill: none;
  stroke: #ffffff;
  shape-rendering: crispEdges;
}
.y.axis line,
.y.axis path {
  fill: none;
  stroke: #ffffff;
  shape-rendering: crispEdges;
}

.texta, .textai,
.textb, .textbi,
.textc, .textci {
  font-size: 1.25rem;
  font-weight: bold;
}

:is(.texta, .textai) {
  fill: var(--Aphase);
}
:is(.textb, .textbi) {
  fill: var(--Bphase);
}
:is(.textc, .textci) {
  fill: var(--Cphase);
}

polyline.vectora,
polyline.vectorai {
  stroke: var(--Aphase);
  stroke-width: var(--thickness_abc);
  stroke-linecap: round;
}
polyline.vectorb,
polyline.vectorbi {
  stroke: var(--Bphase);
  stroke-width: var(--thickness_abc);
  stroke-linecap: round;
}
polyline.vectorc,
polyline.vectorci {
  stroke: var(--Cphase);
  stroke-width: var(--thickness_abc);
  stroke-linecap: round;
}

polyline.vector2,
polyline.vector2i {
  stroke: var(--negative);
  stroke-width: 1.5;
  stroke-dasharray: 3;
}
polyline.vector1,
polyline.vector1i {
  stroke: var(--negative);
  stroke-width: 1.5;
  stroke-dasharray: 3;
}
polyline.vector0,
polyline.vector0i {
  stroke: var(--darkgrey);
  stroke-width: 1.5;
  stroke-dasharray: 3;
}
marker {
  fill: black;
}


#marka,
#arrow-marka,
#markab,
#markai,
#markabi,
#markaz,
#markabz,
#markaz_prime {
  fill: var(--Aphase);
}

#markb,
#markbc,
#markbi,
#markbci,
#markbz,
#markbcz,
#markbz_prime {
  fill: var(--Bphase);
}

#markc,
#markca,
#markci,
#markcai,
#markcz,
#markcaz,
#markcz_prime {
  fill: var(--Cphase);
}

#mark2,
#mark2i,
#mark2bis,
#mark2bisi {
  fill: var(--negative);
}

#mark1,
#mark1i,
#mark1bis,
#mark1bisi {
  fill: var(--positive);
}

#mark0,
#mark0i,
#mark0bis,
#mark0bisi,
#markKN,
#markc-arc {
  fill: var(--zero);
}


#markPol {
  stroke: SteelBlue;
  stroke-width: 2px;
}

.row {
  margin-bottom: 20px;
}
.row .row {
  margin-top: 10px;
  margin-bottom: 0;
}
[class*="col-"] {
  padding-top: 15px;
  padding-bottom: 15px;
  background-color: white;
  background-color: rgba(255,255,255,.15);
  border: 1px solid #ddd;
  border: 1px solid rgba(86,61,124,.2);
}



.circle {
  fill: "none";
  stroke: rgba(255, 255, 225, 0);
  stroke-width: 2px;
}

circle.vectora,
circle.vectorab,
circle.vector_KN {
  fill: rgba(255, 255, 255, 0.01);
  stroke: rgba(255, 255, 255, 0.01);
  stroke-width: 0.2px;
}

circle.vectorb,
circle.vectorbc {
  fill: rgba(255, 255, 255, 0.01);
  stroke: rgba(255, 255, 255, 0.01);
  stroke-width: 0.2px;
}

circle.vectorc,
circle.vectorca {
  fill: rgba(255, 255, 255, 0.01);
  stroke: rgba(255, 255, 255, 0.01);
  stroke-width: 0.2px;
}

circle.vectora_I,
circle.vectorab_I {
  fill: rgba(255, 255, 255, 0.01);
  stroke: rgba(255, 255, 255, 0.01);
  stroke-width: 0.2px;
}

circle.vectorb_I,
circle.vectorbc_I {
  fill: rgba(255, 255, 255, 0.01);
  stroke: rgba(255, 255, 255, 0.01);
  stroke-width: 0.2px;
}

circle.vectorc_I,
circle.vectorc_I {
  fill: rgba(255, 255, 255, 0.01);
  stroke: rgba(255, 255, 255, 0.01);
  stroke-width: 0.2px;
}

circle.vector_Z_Line,
circle.vector_Z2_Line,
circle.vector_Z3_Line {
  fill: rgba(255, 255, 255, 0.01);
  stroke: rgba(0, 0, 0, 1);
  stroke-width: 0.2px;
}

circle.intersect {
  fill: rgba(0, 255, 0, 0.1);
  stroke: rgba(0, 0, 0, 1);
  stroke-width: 0.2px;
}

circle.intersect2 {
  fill: rgba(0, 0, 255, 0.1);
  stroke: rgba(0, 0, 0, 1);
  stroke-width: 0.2px;
}

circle.intersect3 {
  fill: rgba(255, 0, 0, 0.1);
  stroke: rgba(0, 0, 0, 1);
  stroke-width: 0.2px;
}

text {
  text-anchor: middle;
}


.textaLegend,
.textaiLegend,
.texta_I,
.texta_Z,
.textab_Z {
  fill: var(--Aphase);
  font-size: 1rem;
  font-weight: bold;
}

.textbLegend,
.textbiLegend,
.textb_I,
.textb_Z,
.textbc_Z {
  fill: var(--Bphase);
  font-size: 1rem;
  font-weight: bold;
}

.textcLegend,
.textciLegend,
.textc_I,
.textc_Z,
.textca_Z {
  fill: var(--Cphase);
  font-size: 1rem;
  font-weight: bold;
}

polyline {
  stroke-width: 5px;
}

polyline.vectorab,
polyline.vectora_I,
polyline.vectorab_I,
polyline.vectora_Z,
polyline.vectorab_Z {
  stroke: var(--Aphase);
  stroke-width: var(--thickness_abc);
  stroke-linecap: round;
}

polyline.vectora_Z_prime {
  stroke: orange;
  stroke-width: var(--thickness_abc);
  stroke-linecap: round;
}

polyline.vectorbc,
polyline.vectorb_I,
polyline.vectorbc_I,
polyline.vectorb_Z,
polyline.vectorbc_Z,
polyline.vectorb_Z_prime {
  stroke: darkgoldenrod;
  stroke-width: var(--thickness_abc);
  stroke-linecap: round;
}


polyline.vectorca,
polyline.vectorc_I,
polyline.vectorca_I,
polyline.vectorc_Z,
polyline.vectorca_Z,
polyline.vectorc_Z_prime {
  stroke: var(--Cphase);
  stroke-width: var(--thickness_abc);
  stroke-linecap: round;
}

polyline.vector2,
polyline.vector2_I {
  stroke: var(--negative);
  stroke-width: var(--thickness_abc);
  stroke-dasharray: 3;
}

polyline.vector2bis,
polyline.vector2bis_I {
  stroke: var(--negative);
  stroke-width: 4px;
  stroke-dasharray: 3;
}

polyline.vector1,
polyline.vector1_I {
  stroke: limegreen;
  stroke-width: 4px;
  stroke-dasharray: 3;
}

polyline.vector1bis,
polyline.vector1bis_I {
  stroke: limegreen;
  stroke-width: 4px;
  stroke-dasharray: 3
}

polyline.vector0,
polyline.vector0_I {
  stroke: darkgrey;
  stroke-width: 4px;
  stroke-dasharray: 3;
}

polyline.vector0bis,
polyline.vector0bis_I {
  stroke: darkgrey;
  stroke-width: 4px;
  stroke-dasharray: 3;
}

polyline.vector_KN {
  stroke: darkgrey;
  stroke-width: 4px;
}

polyline.vector_Z_Line {
  stroke: SteelBlue;
  stroke-width: 2px;
}


.ui-tabs-vertical {
  width: 40em;
}

.ui-tabs-vertical .ui-tabs-nav {
  padding: 0;
  float: left;
  width: 19.8575em;
}

.ui-tabs-vertical .ui-tabs-nav li {
  clear: left;
  width: 100%;
  border-bottom-width: 0;
  border-right-width: 0;
  margin: 0;
}

.ui-tabs-vertical .ui-tabs-nav li a {
  display: block;
}

.ui-tabs-vertical .ui-tabs-nav li.ui-tabs-active {
  padding-bottom: 0;
  padding-right: 0;
  border-right-width: 0;
  border-right-width: 0;
}

.ui-tabs-vertical .ui-tabs-panel {
  padding: 0;
  float: right;
  width: 20em;
}

#toggleon,
#toggleon_I {
  width: 10px;
  height: 13px;
  padding-right: 3px;
  border-style: solid;
  border-color: rgb(0, 0, 0);
  border-width: 1px;
  background-color: rgba(1, 6, 66, 1);
  text-align: left;
}

label.btn>input[type='radio'] {
  display: none;
}

.accordion-body {
  position: absolute;
  top:0;
  left:0;
  display: -ms-grid;
  display: grid; 
  -ms-grid-rows: 0fr; 
  grid-template-rows: 0fr;
  -webkit-transition: 250ms grid-template-rows ease;
  -o-transition: 250ms grid-template-rows ease;
  transition: 250ms grid-template-rows ease;
  transition: 250ms grid-template-rows ease, 250ms -ms-grid-rows ease;
}

.accordion:hover .accordion-body {
  -ms-grid-rows: 1fr;
  grid-template-rows: 1fr;
}

.accordion-body > div {
  overflow: hidden;
}


.slide:first-of-type {
  display: block;
}

section > .slide{
  display: grid;
  grid-template-columns: 2fr 1fr;

}
.slide {
  display: none;
  width: 100%;
  height: 100vh;
  position: relative;
  background-color: beige;
  /* Make the slides relative */
}

.slide:target {
  display: block;
}


.slideTitle{
  z-index: 10;
  display: grid;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 10%;
  font-size: 2.5rem;
  font-weight: bold;
  background-color: #ccc;
  text-align:end;
  align-items: center;
  color: black;
}

.content {
  position:relative;
flex:10;
  display:flex;
  width: 100%;
  height:100%;
  justify-content: center;
  align-items: center;
  background-color: beige;
}

.page-number {
  position: absolute;
  bottom: 0;
  right: 0;
}


.nav .divNavigator {
  width: 100%;
}
.divNavigator{
  flex: 1;
  display:flex;
  height: 100%;
  width:2rem;
  font-size: 2em;
  font-weight: bold; ;
  justify-content: center;
  align-items: center;
}
/* .nav a {
  display:grid ;
  height: 100%;
  width:10px;
  font-size: 2em;
  font-weight: bold;;
  justify-content: center;
  align-items: center;

}

.nav a:hover {
  color: #cccccc;
} */

#resultContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 10px;
  background-color: aliceblue;
}

#resultText {
  position: absolute;
  width: 400px;
  height: 100px;
  font-size: 1cqi;
  text-wrap: wrap;
  top: 100%;
  left: 100%;
  background-color: aqua;
  visibility: hidden;
}

#x {
  position: absolute;
  top: 0;
  left: calc(100% + 400px);
  background-color: red;
  font-weight: bold;
  color: aliceblue;
  visibility: hidden;
  cursor: pointer;
}

#svg-container1 {
  position: absolute;
  top: 50%;
  left: 50%;
}

#svg-container1CircleRed {
  cursor: pointer;
}



.sleigh {
  offset-path: path("M-200 80 L -90 80 Q 60 80 60 -10 A 50 50 0 0 0 -60 -10 Q -60 80 90 80 L 200 80"
      );
  animation: roller-coaster 6000ms infinite linear;
}

@keyframes roller-coaster {
  0% {
      offset-distance: 0%;
  }

  100% {
      offset-distance: 100%;
  }
}

.pageTitle{
  text-align: center;
  font-size: 2rem;
  font-weight: bold;
}

#main-container {
  height: 100vh;
  border:1px solid black;
}

  #first-row {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-gap: 32px;
    width: 1184px;
    margin: 0 auto; /* Center the grid */
  }
#input-fields1 {
  grid-column: span 3; /* Take up 3 of 12 columns */
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}

#visualization {
  grid-column: span 6; /* Take up 6 of 12 columns */
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

#input-fields {
  grid-column: span 3; /* Take up 3 of 12 columns */
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.inputContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.draggable-control {
position: fixed;
top: 275px; /* Position at the top-left corner */
left: 10px; /* Ensure it's in the top-left */
display:flex;
flex-direction: row;
align-items: flex-start;
width: 175px;
max-height: 300px;
overflow-y: auto;
background-color: black;
border: 1px solid var(--borderFrames);
border-radius: 5px;
cursor: grab;
z-index: 1010;
}

:where(.draggable-control) {
  position: absolute;
  cursor: grab;
  transition: box-shadow 0.2s ease;
}

.draggable-control:has(:focus) {
  box-shadow: 0 0 0 2px var(--focus-color, #0078d4);
}

#test{
  display: flex; 
  flex-direction: column; 
  justify-content: center; 
  align-items: flex-start; 
  position: fixed; 
  inset: 405px 16px 16px 900px;
}
#table-control-R-X-Parameters{
  display: flex; 
  flex-direction: column; 
  justify-content: center; 
  align-items: flex-start; 
  position: fixed; 
  inset: 405px 16px 200px 700px;
}
@media (min-width: 1200px) {
  #first-row {
    width: 100%;
  }
  #input-fields1, #input-fields {
    grid-column: span 2;
  }
  #visualization {
    grid-column: span 8;
  }
}

dialog {
  width: 80%;
  height: auto;
  margin: auto;
  padding: 2rem;
  border: none;
  border-radius: 6px;
  opacity: 0;
  transition: all 0.3s allow-discrete;
}

dialog[open] {
  opacity: 1;
}

@starting-style {
  dialog[open] {
    opacity: 0;
  }
}

dialog::backdrop {
  background-color: rgba(0, 0, 0, 0);
  transition: all 0.3s allow-discrete;
}

dialog[open]::backdrop {
  background-color: rgba(0, 0, 0, 0.8);
}

@starting-style {
  dialog[open]::backdrop {
    background-color: rgba(0, 0, 0, 0);
  }
}

.btnModal {
  background-color: black;
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 6px;
  font-weight: 500;
}

.description {
  max-width: 40ch;
  margin: 1rem 0;
}

#timeStamp {
    display: flex;
    justify-content: center;
    align-items: center;
}

/* .tabs {
	height: var(--height);
	display: grid;
	grid-auto-flow: column;
	background: hsl(0 0% 0%);
	border-radius: var(--radius);
	grid-auto-columns: 1fr;
	position: relative;
	border: var(--border) solid hsl(0 0% 0%);
}

.tabs {
	--ease: linear(
    0, 0.1641 3.52%, 0.311 7.18%,
    0.4413 10.99%, 0.5553 14.96%,
    0.6539 19.12%, 0.738 23.5%,
    0.8086 28.15%, 0.8662 33.12%,
    0.9078 37.92%, 0.9405 43.12%,
    0.965 48.84%, 0.9821 55.28%,
    0.992 61.97%, 0.9976 70.09%, 1
  );
}

.tabs > input,
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}

.tabs:has(:checked:nth-of-type(1)) { --active: 0; }
.tabs:has(:checked:nth-of-type(2)) { --active: 1; }
.tabs:has(:checked:nth-of-type(3)) { --active: 2; }
.tabs:has(:checked:nth-of-type(4)) { --active: 3; }

.tabs :checked + label { --highlight: 1; }

.tabs:has(input:nth-of-type(2)) { --count: 2; }
.tabs:has(input:nth-of-type(3)) { --count: 3; }
.tabs:has(input:nth-of-type(4)) { --count: 4; }

.tabs label {
	padding: 0 clamp(0.5rem, 2vw + 0.25rem, 2rem);
	cursor: pointer;
	text-align: center;
	height: 100%;
	display: grid;
	border-radius: calc(var(--radius) - var(--border));
	place-items: center;
	color: hsl(0 0% 100% / calc(0.5 + var(--highlight, 0)));
	transition: background, color;
  transition-duration: 0.25s;
  transition-timing-function: var(--ease, ease);
} */

input:not(:checked) + label:hover {
	--highlight: 0.35;
	background: hsl(0 0% 20%);
}

/* .tabs::after {
	pointer-events: none;
	content: "";
	width: calc(100% / var(--count));
	height: 100%;
	background: hsl(0 0% 100%);
	position: absolute;
	border-radius: calc(var(--radius) - var(--border));
	mix-blend-mode: difference;
	translate: calc(var(--active, 0) * 100%) 0;
	transition: translate, outline-color;
  transition-duration: var(--speed);
  transition-timing-function: var(--ease, ease);
	outline: 2px solid transparent;
}

.tabs:has(:focus-visible)::after {
	outline-color: red;
} */

#merged-svg-container {
  display: flex;
  justify-content: center !important;
  align-items: center;
  height: 100%;
  width: 100%;
}

.tab-button {
  width: 50px;
  height: 50px;
  margin: 0.2rem;
  border: 1px solid var(--colorText);
  border-radius: 0.25em;
  background: none;
  color: white;
  font-family: "Monorama", sans-serif;
  cursor: pointer;
  transition: background 0.3s, color 0.3s;
}

.tab-button:hover {
  background: var(--colorText);
  color: var(--color-bg);
}

.tab-button.active {
  background: var(--colorText);
  color: var(--color-bg);
}

.tab-button.active {
  border: 2px solid limegreen;
  background-color: hsl(120deg 80% 15%);
  color: white;
  transition: background 0.3s ease;
}

:where(.tab-button) {
  padding: 0.75rem 1.25rem;
  background: var(--button-bg, #333);
  color: var(--button-fg, #fff);
  border-radius: 4px;
  transition: background 0.3s ease;
}

:where(.tab-button:hover, .tab-button:focus) {
  background: var(--button-hover-bg, #444);
}

.faultPanel:has(.tab-button.active) {
  outline: 2px dashed limegreen;
  padding: 0.5rem;
}

@container (min-width: 400px) {
  .faultPanel {
    display: flex;
    flex-wrap: nowrap;
  }
}

/* Mosaic Container */
#mosaic-container {
  display: grid;
  /* grid-template-columns: repeat(3, 300px);
  grid-template-rows: repeat(3, 300px);  */
  gap: 10px; /* Space between tiles */
  padding: 10px;
  box-sizing: border-box;
}

/* Individual Mosaic Tile */
.mosaic-tile {
  border: 1px solid var(--borderFrames);
  display: flex;
  flex-direction:column;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  transition: transform 250ms ease, box-shadow 250ms ease;
  transform-style: preserve-3d;
  background-color: var(--container-bg, #222);
  cursor: pointer;  
}

.mosaic-tile:hover {
  transform: scale(1.01);
  box-shadow: 0 4px 15px rgba(0, 255, 0, 0.15);
  background-color: hsl(120deg 60% 8%);
  outline: 2px solid rgb(3, 75, 3);
}

.default-layout {
  grid-template-areas:
    "cell-1 cell-2 cell-3"
    "cell-4 cell-5 cell-6"
    "cell-7 cell-8 cell-9";
  grid-template-columns: repeat(3, --cellWidth);
  grid-template-rows: repeat(3, --cellWidth);
}

/* Custom Layout (Based on Sketch) */
.custom-layout {
  grid-template-areas:
    "cell-1 cell-1 cell-3"
    "cell-1 cell-1 cell-6"
    "cell-7 cell-8 cell-9";
  grid-template-columns: --cellWidth --cellWidth --cellWidth;
  grid-template-rows: --cellWidth --cellWidth --cellWidth;
}

/* Hide removed cells in custom layout */
.custom-layout #cell-2,
.custom-layout #cell-4 ,
.custom-layout #cell-5 {
  display: none; /* Completely hide from view */
}

.custom-layoutTopMiddle {
  grid-template-areas:
    "cell-1 cell-2 cell-2"
    "cell-4 cell-2 cell-2"
    "cell-7 cell-8 cell-9";
  grid-template-columns: --cellWidth --cellWidth --cellWidth;
  grid-template-rows: --cellWidth --cellWidth --cellWidth;
}

/* Hide removed cells in custom layout */
.custom-layoutTopMiddle #cell-3,
.custom-layoutTopMiddle #cell-5 ,
.custom-layoutTopMiddle #cell-6 {
  display: none; /* Completely hide from view */
}

.custom-layoutTopRight {
  grid-template-areas:
    "cell-1 cell-3 cell-3"
    "cell-4 cell-3 cell-3"
    "cell-7 cell-8 cell-9";
  grid-template-columns: --cellWidth --cellWidth --cellWidth;
  grid-template-rows: --cellWidth --cellWidth --cellWidth;
}

/* Hide removed cells in custom layout */
.custom-layoutTopRight #cell-2,
.custom-layoutTopRight #cell-5 ,
.custom-layoutTopRight #cell-6 {
  display: none; /* Completely hide from view */
}

.custom-layoutMiddleLeft {
  grid-template-areas:
    "cell-4 cell-4 cell-3"
    "cell-4 cell-4 cell-6"
    "cell-7 cell-8 cell-9";
  grid-template-columns: --cellWidth --cellWidth --cellWidth;
  grid-template-rows: --cellWidth --cellWidth --cellWidth;
}

/* Hide removed cells in custom layout */
.custom-layoutMiddleLeft #cell-1,
.custom-layoutMiddleLeft #cell-2 ,
.custom-layoutMiddleLeft #cell-5 {
  display: none; /* Completely hide from view */
}

.custom-layoutMiddleMiddle {
  grid-template-areas:
    "cell-5 cell-5 cell-3"
    "cell-5 cell-5 cell-6"
    "cell-7 cell-8 cell-9";
  grid-template-columns: --cellWidth --cellWidth --cellWidth;
  grid-template-rows: --cellWidth --cellWidth --cellWidth;
}

/* Hide removed cells in custom layout */
.custom-layoutMiddleMiddle #cell-1,
.custom-layoutMiddleMiddle #cell-2 ,
.custom-layoutMiddleMiddle #cell-4 {
  display: none; /* Completely hide from view */
}

.custom-layoutMiddleRight {
  grid-template-areas:
    "cell-1 cell-6 cell-6"
    "cell-4 cell-6 cell-6"
    "cell-7 cell-8 cell-9";
  grid-template-columns: --cellWidth --cellWidth --cellWidth;
  grid-template-rows: --cellWidth --cellWidth --cellWidth;
}


/* Hide removed cells in custom layout */
.custom-layoutMiddleRight #cell-2,
.custom-layoutMiddleRight #cell-3 ,
.custom-layoutMiddleRight #cell-5 {
  display: none; /* Completely hide from view */
}

.custom-layoutBottomLeft {
  grid-template-areas:
    "cell-1 cell-2 cell-3"
    "cell-7 cell-7 cell-6"
    "cell-7 cell-7 cell-9";
  grid-template-columns: --cellWidth --cellWidth --cellWidth;
  grid-template-rows: --cellWidth --cellWidth --cellWidth;
}

/* Hide removed cells in custom layout */
.custom-layoutBottomLeft #cell-4,
.custom-layoutBottomLeft #cell-5 ,
.custom-layoutBottomLeft #cell-8 {
  display: none; /* Completely hide from view */
}

.custom-layoutBottomMiddle {
  grid-template-areas:
    "cell-1 cell-2 cell-3"
    "cell-8 cell-8 cell-6"
    "cell-8 cell-8 cell-9";
  grid-template-columns: --cellWidth --cellWidth --cellWidth;
  grid-template-rows: --cellWidth --cellWidth --cellWidth;
}

/* Hide removed cells in custom layout */
.custom-layoutBottomMiddle #cell-4,
.custom-layoutBottomMiddle #cell-5 ,
.custom-layoutBottomMiddle #cell-7 {
  display: none; /* Completely hide from view */
}

.custom-layoutBottomRight {
  grid-template-areas:
    "cell-1 cell-2 cell-3"
    "cell-4 cell-9 cell-9"
    "cell-7 cell-9 cell-9";
  grid-template-columns: --cellWidth --cellWidth --cellWidth;
  grid-template-rows: --cellWidth --cellWidth --cellWidth;
}

/* Hide removed cells in custom layout */
.custom-layoutBottomRight #cell-5,
.custom-layoutBottomRight #cell-6 ,
.custom-layoutBottomRight #cell-8 {
  display: none; /* Completely hide from view */
}

/* Assign grid areas */
#cell-1{
  grid-area: cell-1;
}
#cell-2 {
  grid-area: cell-2;
}
#cell-3 {
  grid-area: cell-3;
}
#cell-4 {
  grid-area: cell-4;
}
#cell-5 {
  grid-area: cell-5;
}
#cell-6 {
  grid-area: cell-6;
}
#cell-7 {
  grid-area: cell-7;
}
#cell-8 {
  grid-area: cell-8;
}
#cell-9 {
  grid-area: cell-9;
}
.svg-container{
  position: relative;
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  /* flex:1; */
  background: var(--container-bg, #222);
  -webkit-box-pack:center;
      -ms-flex-pack:center;
          justify-content:center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  height: 33%;
  border: 1px solid var(--borderFrames);
}

.svg-container:has(svg:hover) {
  outline: 2px solid var(--color-highlight);
  transition: outline 0.2s ease-in-out;
}

/* Hide elements when the mouse moves outside */
.svg-container:not(:hover) {
  opacity: 0.75;
  transition: opacity 0.3s ease-in-out;
}

/* Improve performance by ensuring only direct children are targeted */
:where(.svg-container > svg) {
  pointer-events: all;
}

.svg-container:has(svg:active) {
  outline: 3px dashed var(--Aphase);
}

/* Hide tooltips when not hovering */
.tooltip:not(:hover) {
  display: none;
}

.controlPanel {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  transition: box-shadow 0.3s ease-in-out;
  width:100%;
}

.controlPanel:has(input:focus) {
  box-shadow: 0px 0px 15px limegreen;
}

.controlPanel label {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
}

.controlPanel input[type="number"],
.controlPanel input[type="range"] {
  width: 80px;
  text-align: center;
  border-radius: 5px;
  border: 1px solid #555;
  background: #333;
  color: white;
  transition: transform 0.1s ease-in-out;
}

.controlPanel input:focus {
  transform: scale(1.1);
  border-color: limegreen;
}

.controlPanel input:focus + output {
  color: limegreen;
  font-weight: bold;
}

.controlPanel label::after {
  content: "✓";
  position: absolute;
  right: -20px;
  color: limegreen;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.controlPanel input:valid + label::after {
  opacity: 1;
}


/* Default button styling */
.toggle-btn {
  padding: 0.5rem 1rem;
  border: 1px solid var(--colorText);
  border-radius: 0.25em;
  background: var(--button-bg, #333);
  color: var(--button-fg, #fff);
  transition: background 0.3s ease;
  cursor: pointer;
}

/* When the toggle button is “active” – for browsers that support :has() */
.toggle-btn:has(.active) {
  background: var(--button-active-bg, #555);
}

/* Alternatively, you may add/remove an .active class via JS and style that: */
.toggle-btn.active {
  background: var(--button-active-bg, #555);
  color: var(--button-active-fg, #fff);
}

.control-table {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  border-collapse: collapse;
  margin: 1rem 0;
  font-family: sans-serif;
}

.control-table th,
.control-table td {
  border: 1px solid #ddd;
  vertical-align: middle;
}

/* Make each row a flex container */
.control-table tr,
.control-table th {
  display: flex;
}

/* First column (labels) */
.label-cell {
  width: calc(4ch + 0.75rem);
  text-align: right;
  padding-right: 0.75rem;
}

/* Slider cells – explicitly set to horizontal layout */
.slider-cell {
  width: 120px;
  display: flex;
  flex-direction: row; /* side-by-side layout */
  align-items: center;
  gap: 0.5rem;
}

/* Let the range slider expand and keep the output fixed */
.slider-cell input[type="range"] {
  min-width: 0;
  flex: 1;
}

.slider-cell output {
  width: 50px;
  text-align: center;
  display: inline-block;
}

/* Optional: Row hover effect for better UX */
.control-table tbody tr:hover {
  background-color: rgba(0, 150, 0, 0.1);
}

@layer components {
  #valueList {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 75%;
    min-width: 230px;
    max-width: 900px;        /* or as you see fit */
    transform: translate(-50%, -50%);
    background: rgba(0 0 0 / 0.8);
    padding: 1rem;
    border-radius: 0.5rem;
    font-size: 0.95rem;
    color: #fff;
    display: block;
    container-type: inline-size;
    container-name: valueListContainer;
    z-index: 5;
  }
  /* Container query applied externally */
  @container valueListContainer (min-width: 40ch) {
    #valueList {
      font-size: 1rem;
    }
  }

  /* Scoped styling outside the block */
  @scope (#valueList) {
    #valueList {
      list-style: none;
      margin: 0;
      padding: 0;
    }
    #valueList > li {
      margin: 0.25rem 0;
    }
  }

  #appendedPolar.hidden {
    display: none;
  }

  #valueListTable {
    width: 100%;
    min-width: 0;
    max-width: 100%;
    margin: 0;
    background: transparent;
    border-collapse: separate;
    table-layout: fixed;
    position: static;
  }
  #valueListTable td {
    padding: 0.25rem 0.5rem;
    text-align: left;
    vertical-align: middle;
    font-family: inherit;
    border: none;
    background: transparent;
    word-break: break-all;
  }
  #valueListTable .label-cell-inPolar {
    width: auto;
    min-width: 7rem;
    font-weight: 500;
    color: #aaa;
    letter-spacing: 0.01em;
    white-space: nowrap;
  }
  #valueListTable .value-cell-inPolar {
    width: 5.5rem;
    min-width: 5.5rem;
    font-variant-numeric: tabular-nums;
    color: #fff;
    font-weight: 600;
    text-align: left;
    background: transparent;
  }
  @container valueListContainer (min-width: 40ch) {
    #valueListTable .label-cell-inPolar { font-size: 1.1em; }
    #valueListTable .value-cell-inPolar { font-size: 1.15em; }
  }
}

/* Utility state styles */
@layer utilities {
  #valueList:where([hidden]) {
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s;
  }

  #valueList:not([hidden]) {
    opacity: 1;
    transition: opacity 0.2s;
  }
}

/* Layer order */
@layer base, components, utilities;
